# -*- coding: utf-8 -*-

"""
paginationtester

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from paginationtester.api_helper import APIHelper


class TransactionControllerTests(ControllerTestBase):

    controller = None

    @classmethod
    def setUpClass(cls):
        super(TransactionControllerTests, cls).setUpClass()
        cls.controller = cls.client.transaction
        cls.response_catcher = cls.controller.http_call_back

    # Fetch transactions using Offset-based Pagination
    def test_fetch_with_offset(self):
        # Parameters for the API call
        offset = 0
        limit = 10

        # Perform the API call through the SDK function
        result = self.controller.fetch_with_offset(offset, limit)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json; charset=utf-8'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Fetch transactions using Cursor-based Pagination
    def test_fetch_with_cursor(self):
        # Parameters for the API call
        cursor = 'txn_abc123'
        limit = 10

        # Perform the API call through the SDK function
        result = self.controller.fetch_with_cursor(cursor, limit)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json; charset=utf-8'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Fetch transactions using Link-based Pagination
    def test_fetch_with_link(self):
        # Parameters for the API call
        page = 1
        size = 10

        # Perform the API call through the SDK function
        result = self.controller.fetch_with_link(page, size)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json; charset=utf-8'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


